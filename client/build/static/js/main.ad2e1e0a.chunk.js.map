{"version":3,"sources":["App.js","index.js"],"names":["App","keyIndex","useState","empId","setEmpId","name","setName","position","setPosition","office","setOffice","salary","setSalary","emploeeList","setEmployeeList","edit","setEdit","open","setOpen","useEffect","getEmployees","addEmployee","Axios","post","then","console","log","updateCancel","get","response","data","updateEmployee","put","id","affectedRows","map","className","Confirm","header","onCancel","onConfirm","delete","filter","Form","Field","placeholder","value","onChange","e","target","Fragment","Button","style","backgroundColor","color","onClick","primary","Table","celled","fixed","singleLine","Header","Row","HeaderCell","textAlign","Body","val","Cell","editEmployee","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAgNeA,EA3MH,WACV,IAAIC,EAAW,EAEf,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA4BR,mBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEA,EAAuCV,mBAAS,IAAhD,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAwBZ,oBAAS,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAAwBd,oBAAS,GAAjC,mBAAOe,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,MAIC,IAEH,IAAMC,EAAc,WAClBC,IAAMC,KAAK,UAAW,CACpBlB,OACAE,WACAE,SACAE,WACCa,MAAK,WACNC,QAAQC,IAAI,WACZN,IACAO,QAIEP,EAAe,WACnBE,IAAMM,IAAI,iBAAiBJ,MAAK,SAACK,GAC/BJ,QAAQC,IAAIG,GACZf,EAAgBe,EAASC,UAavBC,EAAiB,WACrBT,IAAMU,IAAI,UAAW,CACnBC,GAAI9B,EACJE,OACAE,WACAE,SACAE,WACCa,MAAK,SAACK,GACPJ,QAAQC,IAAIG,GACuB,IAA/BA,EAASC,KAAKI,eAChBpB,EAAgBD,EAAYsB,KAAI,SAACL,GAC/B,OAAOA,EAAKG,KAAO9B,EAAQ,CAAC8B,GAAI9B,EAAOE,OAAME,WAAUE,SAAQE,UAAUmB,MAE3EH,SAKAA,EAAe,WACnBX,GAAQ,GACRZ,EAAS,GACTE,EAAQ,IACRE,EAAY,IACZE,EAAU,IACVE,EAAU,IAwEZ,OACE,sBAAKwB,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,mEAEF,cAACC,EAAA,EAAD,CAASpB,KAAMA,EAAMqB,OAAO,iBAAiBC,SA1B5B,WACnBrB,GAAQ,IAyB+DsB,UAtBnD,WApDC,IAACP,IAqDP9B,EApDfmB,IAAMmB,OAAN,kBAAwBR,IAAMT,MAAK,SAACK,GAClCJ,QAAQC,IAAIG,GACuB,IAA/BA,EAASC,KAAKI,cAChBpB,EAAgBD,EAAY6B,QAAO,SAACZ,GAClC,OAAOA,EAAKG,KAAOA,SAiDzBf,GAAQ,MAqBN,eAACyB,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,+CACA,uBAAOC,YAAY,OAAOC,MAAOzC,EAAM0C,SAAU,SAACC,GAAQ1C,EAAQ0C,EAAEC,OAAOH,aAE7E,eAACH,EAAA,EAAKC,MAAN,WACE,6CACA,uBAAOC,YAAY,WAAWC,MAAOvC,EAAUwC,SAAU,SAACC,GAAQxC,EAAYwC,EAAEC,OAAOH,aAEzF,eAACH,EAAA,EAAKC,MAAN,WACE,2CACA,uBAAOC,YAAY,SAASC,MAAOrC,EAAQsC,SAAU,SAACC,GAAQtC,EAAUsC,EAAEC,OAAOH,aAEnF,eAACH,EAAA,EAAKC,MAAN,WACE,2CACA,uBAAOC,YAAY,IAAIC,MAAOnC,EAAQoC,SAAU,SAACC,GAAQpC,EAAUoC,EAAEC,OAAOH,aAhC/E/B,EAEC,eAAC,IAAMmC,SAAP,WACE,cAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,gBAAiB,UAAWC,MAAO,SAAUC,QAASxB,EAAtE,6BACA,cAACoB,EAAA,EAAD,CAAQI,QAAS5B,EAAjB,uBAIE,cAACwB,EAAA,EAAD,CAAQK,SAAO,EAACD,QAASlC,EAAzB,6BA4BN,uBACA,eAACoC,EAAA,EAAD,CAAOC,QAAM,EAACC,OAAK,EAACC,YAAU,EAA9B,UACE,cAACH,EAAA,EAAMI,OAAP,UACE,eAACJ,EAAA,EAAMK,IAAP,WACE,cAACL,EAAA,EAAMM,WAAP,CAAkBC,UAAU,SAA5B,kBACA,cAACP,EAAA,EAAMM,WAAP,CAAkBC,UAAU,SAA5B,sBACA,cAACP,EAAA,EAAMM,WAAP,CAAkBC,UAAU,SAA5B,oBACA,cAACP,EAAA,EAAMM,WAAP,CAAkBC,UAAU,SAA5B,oBACA,cAACP,EAAA,EAAMM,WAAP,SAGJ,cAACN,EAAA,EAAMQ,KAAP,UACGpD,EAAYsB,KAAI,SAAC+B,GAChB,OACE,eAACT,EAAA,EAAMK,IAAP,WACE,cAACL,EAAA,EAAMU,KAAP,UAAaD,EAAI7D,OACjB,cAACoD,EAAA,EAAMU,KAAP,UAAaD,EAAI3D,WACjB,cAACkD,EAAA,EAAMU,KAAP,UAAaD,EAAIzD,SACjB,cAACgD,EAAA,EAAMU,KAAP,CAAYH,UAAU,QAAtB,SAA+BE,EAAIvD,SACnC,eAAC8C,EAAA,EAAMU,KAAP,CAAYH,UAAU,SAAtB,UACE,cAACb,EAAA,EAAD,CAAQK,SAAO,EAACD,QAAS,kBAtJpB,SAACW,GACpB9D,EAAS8D,EAAIjC,IACb3B,EAAQ4D,EAAI7D,MACZG,EAAY0D,EAAI3D,UAChBG,EAAUwD,EAAIzD,QACdG,EAAUsD,EAAIvD,QACdK,GAAQ,GAgJqCoD,CAAaF,IAA5C,kBACA,cAACf,EAAA,EAAD,CAAQG,MAAM,MAAMC,QAAS,kBAxExBtB,EAwE0CiC,EAAIjC,GAvEjEf,GAAQ,QACRd,EAAS6B,GAFS,IAACA,GAwEL,yBAPYhC,iBCxL9BoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad2e1e0a.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Button, Form, Table, Confirm } from 'semantic-ui-react';\n\nconst App = () => {\n  let keyIndex = 1;\n\n  const [empId, setEmpId] = useState(0);\n  const [name, setName] = useState('');\n  const [position, setPosition] = useState('');\n  const [office, setOffice] = useState('');\n  const [salary, setSalary] = useState(0);\n\n  const [emploeeList, setEmployeeList] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    getEmployees();\n    // return () => {\n    //   cleanup\n    // }\n  }, []);\n\n  const addEmployee = () => {\n    Axios.post('/create', {\n      name, \n      position, \n      office, \n      salary\n    }).then(() => {\n      console.log('Success');\n      getEmployees();\n      updateCancel(); // use this to reset the fields\n    });\n  };\n\n  const getEmployees = () => {\n    Axios.get('/getEmployees').then((response) => {\n      console.log(response);\n      setEmployeeList(response.data);\n    });\n  };\n\n  const editEmployee = (val) => {   \n    setEmpId(val.id);\n    setName(val.name);\n    setPosition(val.position);\n    setOffice(val.office);\n    setSalary(val.salary);\n    setEdit(true);\n  };\n\n  const updateEmployee = () => {\n    Axios.put('/update', {\n      id: empId,\n      name, \n      position, \n      office, \n      salary\n    }).then((response) => {\n      console.log(response);\n      if (response.data.affectedRows === 1) {\n        setEmployeeList(emploeeList.map((data) => {\n          return data.id === empId ? {id: empId, name, position, office, salary} : data;\n        }));\n        updateCancel();\n      }\n    });\n  };\n\n  const updateCancel = () => {\n    setEdit(false);\n    setEmpId(0);\n    setName('');\n    setPosition('');\n    setOffice('');\n    setSalary(0);\n  };\n\n  const deleteEmployee = (id) => {\n    Axios.delete(`/delete/${id}`).then((response) => {\n      console.log(response);\n      if (response.data.affectedRows === 1) {\n        setEmployeeList(emploeeList.filter((data) => {\n          return data.id !== id;\n        }));\n      }\n    });\n  };\n\n  // const header = [\n  //   { title: 'Name', prop: 'name'},\n  //   { title: 'Position', prop: 'position'},\n  //   { title: 'Office', prop: 'office'},\n  //   { title: 'Salary', prop: 'salary'}\n  // ];\n\n  // const row = (x, i, header) =>\n  //   <Table.Row key={`tr-${i}`}>\n  //     {header.map((y, k) => \n  //       <Table.Cell key={`tc-${k}`}>\n  //         {x[y.prop]}\n  //       </Table.Cell>\n  //     )}\n  //   </Table.Row>\n\n  // const renderTableData = () =>\n    // <Table celled fixed singleLine>\n    //   <Table.Header>\n    //     <Table.Row>\n    //       {header.map((x, i) =>\n    //         <Table.HeaderCell key={`thc-${i}`} textAlign='center'>\n    //           {x.title}\n    //         </Table.HeaderCell>\n    //       )}\n    //     </Table.Row>\n    //   </Table.Header>\n    //   <Table.Body>\n    //     {emploeeList.map((x, i) => row(x, i, header))}\n    //   </Table.Body>\n    // </Table>\n\n  const openConfirm = (id) => {\n    setOpen(true);\n    setEmpId(id);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleConfirm = () => {\n    deleteEmployee(empId);\n    setOpen(false);\n  };\n  \n  const renderAddUpdateButton = () => {\n    if(edit) {\n      return (\n        <React.Fragment>\n          <Button style={{backgroundColor: '#229954', color: 'white'}} onClick={updateEmployee}>Update Employee</Button>\n          <Button onClick={updateCancel}>Cancel</Button>\n        </React.Fragment>\n      );\n    }\n    return (<Button primary onClick={addEmployee}>Add Employee</Button>);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <h1>Simple Employee Management Page</h1>\n      </div>\n      <Confirm open={open} header='Confirm Delete' onCancel={handleCancel} onConfirm={handleConfirm} />\n      <Form>\n        <Form.Field>\n          <label>First Name</label>\n          <input placeholder='Name' value={name} onChange={(e) => { setName(e.target.value) }}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Position</label>\n          <input placeholder='Position' value={position} onChange={(e) => { setPosition(e.target.value) }}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Office</label>\n          <input placeholder='Office' value={office} onChange={(e) => { setOffice(e.target.value) }}/>\n        </Form.Field>\n        <Form.Field>\n          <label>Salary</label>\n          <input placeholder='0' value={salary} onChange={(e) => { setSalary(e.target.value) }}/>\n        </Form.Field>\n        {renderAddUpdateButton()}\n      </Form>\n      <hr />\n      <Table celled fixed singleLine>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell textAlign='center'>Name</Table.HeaderCell>\n            <Table.HeaderCell textAlign='center'>Position</Table.HeaderCell>\n            <Table.HeaderCell textAlign='center'>Office</Table.HeaderCell>\n            <Table.HeaderCell textAlign='center'>Salary</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {emploeeList.map((val) => {\n            return (\n              <Table.Row key={keyIndex++}>\n                <Table.Cell>{val.name}</Table.Cell>\n                <Table.Cell>{val.position}</Table.Cell>\n                <Table.Cell>{val.office}</Table.Cell>\n                <Table.Cell textAlign='right'>{val.salary}</Table.Cell>\n                <Table.Cell textAlign='center'>\n                  <Button primary onClick={() => editEmployee(val)}>Edit</Button>\n                  <Button color='red' onClick={() => openConfirm(val.id)}>Delete</Button>\n                </Table.Cell>\n              </Table.Row>\n            )\n          })}\n        </Table.Body>\n        </Table>\n        {/*{renderTableData()}*/}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}